package kafkaConiguration;

import java.util.HashMap;
import java.util.Map;

import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.common.serialization.StringSerializer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.kafka.annotation.EnableKafka;
import org.springframework.kafka.core.ConsumerFactory;
import org.springframework.kafka.core.DefaultKafkaConsumerFactory;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.kafka.support.serializer.JsonSerializer;

import events.OrderCreatedEvent;

@Configuration
@EnableKafka
class KafkaConsumerConfig {

	@Bean
	KafkaTemplate<String, OrderCreatedEvent> kafkaTemplate(){
		return new KafkaTemplate<String,OrderCreatedEvent>(producerFactory());

	}

	@Bean
	private ConsumerFactory<String, OrderCreatedEvent> consumerFactory() {

		Map<String, Object> configProps = new HashMap<>();
		configProps.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");
		configProps.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringSerializer.class);
		configProps.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, JsonSerializer.class);
		
		return new DefaultKafkaConsumerFactory(configProps);
	}

}
