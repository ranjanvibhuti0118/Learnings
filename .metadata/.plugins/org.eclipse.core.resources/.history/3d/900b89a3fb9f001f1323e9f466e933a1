package kafkaConiguration;

import java.util.HashMap;
import java.util.Map;

import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.common.serialization.StringDeserializer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.kafka.annotation.EnableKafka;
import org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;
import org.springframework.kafka.core.ConsumerFactory;
import org.springframework.kafka.core.DefaultKafkaConsumerFactory;
import org.springframework.kafka.support.serializer.JsonDeserializer;

import events.OrderCreatedEvent;

@Configuration
@EnableKafka
class KafkaConsumerConfig {

	//	@Bean
	//	 ConcurrentKafkaListenerContainerFactory<String, OrderCreatedEvent> kafkaListenerContainerFactory(){
	//		 ConcurrentKafkaListenerContainerFactory<String, OrderCreatedEvent> factory =
	//	                new ConcurrentKafkaListenerContainerFactory<>();
	//	        factory.setConsumerFactory(consumerFactory());
	//	        return factory;
	//	}
	//
	//	@Bean
	//	 ConsumerFactory<String, OrderCreatedEvent> consumerFactory() {
	//
	//		Map<String, Object> configProps = new HashMap<>();
	//		configProps.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");
	//		configProps.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);
	//		configProps.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, JsonDeserializer.class);
	//	
	//		JsonDeserializer<OrderCreatedEvent> deserializer = new JsonDeserializer<>(OrderCreatedEvent.class);
	////	    deserializer.setRemoveTypeHeaders(false);
	////	    deserializer.addTrustedPackages("*");
	////	    deserializer.setUseTypeMapperForKey(false);
	//		
	//        return new DefaultKafkaConsumerFactory<>(configProps, new StringDeserializer(), deserializer);
	//	}
	@Bean
	ConsumerFactory<String, OrderCreatedEvent> consumerFactory() 
	{ 

		// Creating a map of string-object type 
		Map<String, Object> config = new HashMap<>(); 

		// Adding the Configuration 
		config.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, 
				"127.0.0.1:9092"); 
		config.put(ConsumerConfig.GROUP_ID_CONFIG, 
				"group_id"); 
		config.put( 
				ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, 
				StringDeserializer.class); 
		config.put( 
				ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, 
				JsonDeserializer.class); 

		// Returning message in JSON format 
		return new DefaultKafkaConsumerFactory<>( 
				config, new StringDeserializer(), 
				new JsonDeserializer<>(OrderCreatedEvent.class)); 
	} 

	@Bean
	public ConcurrentKafkaListenerContainerFactory<String,OrderCreatedEvent> OrderCreatedEvent() 
	{ 
		ConcurrentKafkaListenerContainerFactory< 
		String, OrderCreatedEvent> factory 
		= new ConcurrentKafkaListenerContainerFactory<>(); 
		factory.setConsumerFactory(consumerFactory()); 

		return factory; 
	}
}
